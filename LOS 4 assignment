#!/bin/bash

# Function to display usage
usage() {
    echo "Usage: $0 <pattern> <filename>"
    echo "Example: $0 'search_term' 'file.txt'"
    exit 1
}

# Step 1: Check if the script is called with arguments
if [ $# -eq 0 ]; then
    echo "No arguments provided."
    usage
fi

# Step 2: Validate the number of arguments
if [ $# -ne 2 ]; then
    echo "Invalid number of arguments."
    usage
fi

# Step 3: Assign arguments to variables
PATTERN=$1
FILE=$2

# Step 4: Validate if the file exists
if [ ! -f "$FILE" ]; then
    echo "File '$FILE' does not exist."
    exit 1
fi

# Step 5: Check for the pattern in the file using grep with various options
echo "Searching for pattern '$PATTERN' in file '$FILE'..."

# Using grep options to search for the pattern
if grep -q -i "$PATTERN" "$FILE"; then
    echo "Pattern found in '$FILE'."
else
    echo "Pattern not found in '$FILE'."
fi

# Additional grep commands to demonstrate usage of various options:
echo "Additional grep outputs:"
echo "Count of occurrences:"
grep -c -i "$PATTERN" "$FILE"

echo "Line numbers of occurrences:"
grep -n -i "$PATTERN" "$FILE"

echo "Only matching parts of lines:"
grep -o -i "$PATTERN" "$FILE"

echo "Context lines (2 lines before and after):"
grep -C 2 -i "$PATTERN" "$FILE"

echo "Lines before the match (1 line before):"
grep -B 1 -i "$PATTERN" "$FILE"

echo "Lines after the match (1 line after):"
grep -A 1 -i "$PATTERN" "$FILE"

echo "Files containing the pattern:"
grep -l -i "$PATTERN" *

exit 0
